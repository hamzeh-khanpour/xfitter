Minimizer: MINUIT # CERES
MINUIT:
  Commands: |
    set str 2
    call fcn 3
#    call fcn 1
#    migrad
#    hesse
#    call fcn 3
    
#  doErrors :  Hesse # None

Parameters:
  Ag   :  DEPENDENT
  Bg   : [ -0.134530, 0.27 ]
  Cg   : [  6.830920,  0.32 ]
  Agp  : [ 0.571325, 0.01 ]  # negative gluon ....
  Bgp  : [ -0.194013, 0.01 ]
  Cgp  : [ 25.0, 0.]  # fix C of negative gluon
  Auv  :  DEPENDENT
  Buv  : [ 0.667601, 0.016 ]
  Cuv  : [ 4.989629, 0.06 ]
  Duv  : [    0     ]
  Euv  : [ 12.185488, 0.8 ]
  Adv  :  DEPENDENT
  Bdv  : [ 0.928429, 0.06 ]
  Cdv  : [ 5.497182, 0.3 ]
  Aubar: [ 0.0, 0.0 ] # not used (Aubar=Adbar)
  Bubar: [ 0.0, 0.0  ] # not used (Bubar=Bdbar)
  Cubar: [ 1.634858, 0.8 ]
  Dubar: [ 0.0, 0.0 ]
  Adbar: [ 0.11914092, 0.01 ]
  Bdbar: [ -0.146241, 0.004  ]
  Cdbar: # another example of providing value, step etc.
    value: 10.437257
    step: 1.2345
    #min
    #max
    #pr_mean
    #pr_sigma
  ZERO : [ 0. ]          # zero
  fs : [ 0.31, 0.0 ]

Parameterisations:
  par_uv:
    class: HERAPDF
    parameters: [Auv,Buv,Cuv,Duv,Euv]
  par_dv:
    class: HERAPDF
    parameters: [Adv,Bdv,Cdv]
  par_ubar:
    class: HERAPDF
    parameters: [Adbar,Bdbar,Cubar,Dubar]
  par_dbar:
    class: HERAPDF
    parameters: [Adbar,Bdbar,Cdbar]
  par_s:
    #class: HERAPDF
    #parameters: [As,Bs,Cs]
    # parametrise as expression: otherwise how to parametrise it as fs/(1-fs)*par_dbar using HERAPDF?
    class: Expression
    expression: "Adbar*fs/(1-fs)*(x^Bdbar*(1-x)^Cdbar)"
  par_g:
    class: NegativeGluon
    parameters: [Ag,Bg,Cg,ZERO,ZERO,Agp,Bgp,Cgp]
  # Another example for Expression parameterisation
  #par_g:
  #  class: Expression
  #  expression: "Ag*(x^Bg*(1-x)^Cg-Agp*x^Bgp*(1-x)^Cgp)"

DefaultDecomposition: proton
Decompositions:
  proton:
    class: UvDvubardbars
    xuv: par_uv
    xdv: par_dv
    xubar: par_ubar
    xdbar: par_dbar
    xs: par_s
    xg: par_g

DefaultEvolution: proton-QCDNUM

Evolutions:
  proton-QCDNUM:
    ? !include evolutions/QCDNUM/parameters.yaml

Q0 : 1.183215957 # Initial scale =sqrt(1.4)

? !include constants.yaml

alphas : 0.1059

byReaction:
  # RT DIS scheme settings:
  RT_DISNC:
    ? !include reactions/RT_DISNC/parameters.yaml
  # FONLL scheme settings:
  FONLL_DISNC:
    ? !include reactions/FONLL_DISNC/parameters.yaml
  FONLL_DISCC:
    ? !include reactions/FONLL_DISCC/parameters.yaml
  # FF ABM scheme settings:
  FFABM_DISNC:
    ? !include reactions/FFABM_DISNC/parameters.yaml
    runm: 0
  FFABM_DISCC:
    ? !include reactions/FFABM_DISCC/parameters.yaml
    runm: 0
  # AFB settings:
  AFB:
    ? !include reactions/AFB/parameters.yaml
  # APPLgrid settings:
  APPLgrid:
    ? !include reactions/APPLgrid/parameters.yaml
  # (optional) Fractal module settings:
  Fractal_DISNC:
    ? !include reactions/Fractal_DISNC/parameters.yaml
  # specific settings
  HVQMNR_LHCb_7TeV_charm:
    MNRmr_AB_c: 0.1968
    MNRmf_AB_c: 0.4339
  HVQMNR_LHCb_7TeV_beauty:
    MNRmr_AB_b: 0.1119
    MNRmf_AB_b: 0.0688

# Specify HF scheme used for DIS NC processes:
hf_scheme_DISNC :
#  defaultValue : 'RT_DISNC'        # global specification
#  defaultValue : 'BaseDISNC'       # global specification
#  defaultValue : 'FONLL_DISNC'     # global specification
  defaultValue : 'FFABM_DISNC'
#  'HERA1+2 NCep 920' : 'BaseDISNC' # datafile specific (based on name)
#  1 : BaseDISNC
#  'HERA1+2 NCep 920' : 'Fractal_DISNC'  # Fractal model. Add parameters file if you want to try it (see above)

# Specify HF scheme used for DIS CC processes:
hf_scheme_DISCC :
#  defaultValue : 'BaseDISCC'       # global specification
#  defaultValue : 'FONLL_DISCC'     # global specification
  defaultValue : 'FFABM_DISCC'     # global specification
